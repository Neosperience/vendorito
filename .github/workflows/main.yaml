name: Main
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.18'
      - name: Install tools
        run: |
          go install golang.org/x/tools/cmd/goimports@latest
          go install gotest.tools/gotestsum@latest
          go install github.com/boumenot/gocover-cobertura@latest
      - run: gofmt -d .
      - run: goimports -format-only -d .
      - run: go vet -tags=containers_image_openpgp ./...
      - run: go test -tags=containers_image_openpgp -race -coverprofile=coverage.out -covermode=atomic ./...
      - uses: codecov/codecov-action@v2
        with:
          files: ./coverage.out
          flags: unittests
          verbose: true 
      - run: go build -tags=containers_image_openpgp -race ./cmd/vendorito
  container-image:
    if: github.ref == 'refs/heads/main'
    needs: [lint-and-test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v1
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ghcr.io/${{ github.repository }}
          labels: |
            org.opencontainers.image.title=Vendorito
            org.opencontainers.image.description=Vendor your OCI images
            org.opencontainers.image.vendor=Neosperience
      - uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max